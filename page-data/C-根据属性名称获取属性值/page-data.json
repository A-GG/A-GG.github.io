{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/C-根据属性名称获取属性值/","result":{"data":{"site":{"siteMetadata":{"title":"AGG","postCopyright":true,"siteUrl":"https://agg.me","author":{"name":"AGG"}}},"mdx":{"id":"c557f2c5-39f7-5d36-a105-5efae8f4bc37","excerpt":"有的时候我们会遇到这样的问题： 把类的属性名称配置到配置文件中，然后需要通过这个属性名称获取当前实例的该属性的值。这个该怎怎么做呢？ 首先，我们声明一个 Person 类，设置两个属性 Name ， Age 然后获取一个Person类的实例 然后通过字符串 \"Name\" 来获取 person 对象的 Name…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"C#根据属性名称获取属性值\",\n  \"date\": \"2014-04-25T21:16:31.284Z\",\n  \"tags\": [\"C#\", \".NET\"],\n  \"categories\": [\".NET\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u6709\\u7684\\u65F6\\u5019\\u6211\\u4EEC\\u4F1A\\u9047\\u5230\\u8FD9\\u6837\\u7684\\u95EE\\u9898\\uFF1A\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u628A\\u7C7B\\u7684\\u5C5E\\u6027\\u540D\\u79F0\\u914D\\u7F6E\\u5230\\u914D\\u7F6E\\u6587\\u4EF6\\u4E2D\\uFF0C\\u7136\\u540E\\u9700\\u8981\\u901A\\u8FC7\\u8FD9\\u4E2A\\u5C5E\\u6027\\u540D\\u79F0\\u83B7\\u53D6\\u5F53\\u524D\\u5B9E\\u4F8B\\u7684\\u8BE5\\u5C5E\\u6027\\u7684\\u503C\\u3002\\u8FD9\\u4E2A\\u8BE5\\u600E\\u600E\\u4E48\\u505A\\u5462\\uFF1F\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u9996\\u5148\\uFF0C\\u6211\\u4EEC\\u58F0\\u660E\\u4E00\\u4E2A\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Person\"), \"\\u7C7B\\uFF0C\\u8BBE\\u7F6E\\u4E24\\u4E2A\\u5C5E\\u6027\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Name\"), \"\\uFF0C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Age\")), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"csharp\",\n    \"terminal\": \"carbon\",\n    \"theme\": \"base16-light\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"public class Person{\\n    public string Name { get; set; }\\n    public int Age { get; set; }\\n}\"), \"\\n        \"), mdx(\"p\", null, \"\\u7136\\u540E\\u83B7\\u53D6\\u4E00\\u4E2APerson\\u7C7B\\u7684\\u5B9E\\u4F8B\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"csharp\",\n    \"terminal\": \"carbon\",\n    \"theme\": \"base16-light\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"Person person = new Person{Name = \\\"Ryan\\\", Age = 20};\"), \"\\n        \"), mdx(\"p\", null, \"\\u7136\\u540E\\u901A\\u8FC7\\u5B57\\u7B26\\u4E32\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"Name\\\"\"), \"\\u6765\\u83B7\\u53D6\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"person\"), \"\\u5BF9\\u8C61\\u7684\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Name\"), \"\\u5C5E\\u6027\\u503C\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"csharp\",\n    \"terminal\": \"carbon\",\n    \"theme\": \"base16-light\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \" string name = person.GetType().GetProperty(\\\"Name\\\").GetValue(person, null).ToString();\"), \"\\n        \"), mdx(\"p\", null, \"Well done\\uFF0C\\u6211\\u4EEC\\u83B7\\u53D6\\u5230\\u8FD9\\u4E2A\\u5C5E\\u6027\\u7684\\u503C\\u4E86\\uFF01\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/C-根据属性名称获取属性值/"},"frontmatter":{"title":"C#根据属性名称获取属性值","date":"April 25, 2014","description":null,"categories":[".NET"],"tags":["C#",".NET"],"toc":null}}},"pageContext":{"slug":"/C-根据属性名称获取属性值/","previous":{"fields":{"slug":"/Ubuntu-14-04-亮度BUG解决方案/"},"frontmatter":{"title":"Ubuntu 14.04 亮度BUG解决方案"}},"next":{"fields":{"slug":"/UEFI-BIOS下Windows系统的安装/"},"frontmatter":{"title":"UEFI BIOS下Windows系统的安装"}}}},"staticQueryHashes":["2786614800","2841359383","3828236571"]}